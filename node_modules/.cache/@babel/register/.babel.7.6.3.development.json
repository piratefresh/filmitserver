{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Magnus\\\\Documents\\\\webstuff\\\\Film It\\\\server\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Magnus\\\\Documents\\\\webstuff\\\\Film It\\\\server\",\"filename\":\"C:\\\\Users\\\\Magnus\\\\Documents\\\\webstuff\\\\Film It\\\\server\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Magnus\\\\Documents\\\\webstuff\\\\Film It\\\\server\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Magnus\\Documents\\webstuff\\Film It\\server\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Magnus\\Documents\\webstuff\\Film It\\server",
      "filename": "C:\\Users\\Magnus\\Documents\\webstuff\\Film It\\server\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Magnus\\Documents\\webstuff\\Film It\\server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Magnus\\Documents\\webstuff\\Film It\\server\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Magnus\\Documents\\webstuff\\Film It\\server\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Magnus\\Documents\\webstuff\\Film It\\server\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    type Query {\\n        me: User\\n        user(id: ID!): User\\n        users: [User!]\\n    }\\n\\n    type User {\\n        id: ID!\\n        username: String!\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar app = (0, _express[\"default\"])();\napp.use((0, _cors[\"default\"])());\nvar schema = (0, _apolloServerExpress.gql)(_templateObject());\nvar _users = {\n  1: {\n    id: '1',\n    username: 'Robin Wieruch'\n  },\n  2: {\n    id: '2',\n    username: 'Dave Davids'\n  }\n};\nvar resolvers = {\n  Query: {\n    me: function me(parent, args, _ref) {\n      var _me = _ref.me;\n      return _me;\n    },\n    user: function user(parent, _ref2) {\n      var id = _ref2.id;\n      return _users[id];\n    },\n    users: function users() {\n      return Object.values(_users);\n    }\n  },\n  User: {\n    username: function username(user) {\n      return \"\".concat(user.firstname, \" \").concat(user.lastname);\n    }\n  }\n};\nvar server = new _apolloServerExpress.ApolloServer({\n  typeDefs: schema,\n  resolvers: resolvers,\n  context: {\n    me: _users[1]\n  }\n});\nserver.applyMiddleware({\n  app: app,\n  path: '/graphql'\n});\nvar port = 8000;\napp.listen({\n  port: port\n}, function () {\n  console.log(\"Server \\uD83D\\uDCE6 is running \\uD83C\\uDFC3 at port  http://localhost:\".concat(port, \"/graphql\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsInNjaGVtYSIsImdxbCIsInVzZXJzIiwiaWQiLCJ1c2VybmFtZSIsInJlc29sdmVycyIsIlF1ZXJ5IiwibWUiLCJwYXJlbnQiLCJhcmdzIiwidXNlciIsIk9iamVjdCIsInZhbHVlcyIsIlVzZXIiLCJmaXJzdG5hbWUiLCJsYXN0bmFtZSIsInNlcnZlciIsIkFwb2xsb1NlcnZlciIsInR5cGVEZWZzIiwiY29udGV4dCIsImFwcGx5TWlkZGxld2FyZSIsInBhdGgiLCJwb3J0IiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUNBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSx1QkFBUjtBQUVBLElBQU1DLE1BQU0sT0FBR0Msd0JBQUgsb0JBQVo7QUFhQSxJQUFJQyxNQUFLLEdBQUc7QUFDUixLQUFHO0FBQ0RDLElBQUFBLEVBQUUsRUFBRSxHQURIO0FBRURDLElBQUFBLFFBQVEsRUFBRTtBQUZULEdBREs7QUFLUixLQUFHO0FBQ0RELElBQUFBLEVBQUUsRUFBRSxHQURIO0FBRURDLElBQUFBLFFBQVEsRUFBRTtBQUZUO0FBTEssQ0FBWjtBQVdBLElBQU1DLFNBQVMsR0FBRztBQUNkQyxFQUFBQSxLQUFLLEVBQUU7QUFDSEMsSUFBQUEsRUFBRSxFQUFFLFlBQUNDLE1BQUQsRUFBU0MsSUFBVCxRQUEwQjtBQUFBLFVBQVRGLEdBQVMsUUFBVEEsRUFBUztBQUMxQixhQUFPQSxHQUFQO0FBQ0gsS0FIRTtBQUlIRyxJQUFBQSxJQUFJLEVBQUUsY0FBQ0YsTUFBRCxTQUFrQjtBQUFBLFVBQVJMLEVBQVEsU0FBUkEsRUFBUTtBQUNwQixhQUFPRCxNQUFLLENBQUNDLEVBQUQsQ0FBWjtBQUNELEtBTkE7QUFPSEQsSUFBQUEsS0FBSyxFQUFFLGlCQUFNO0FBQ2IsYUFBT1MsTUFBTSxDQUFDQyxNQUFQLENBQWNWLE1BQWQsQ0FBUDtBQUNDO0FBVEUsR0FETztBQVlkVyxFQUFBQSxJQUFJLEVBQUU7QUFDRlQsSUFBQUEsUUFBUSxFQUFFLGtCQUFBTSxJQUFJO0FBQUEsdUJBQU9BLElBQUksQ0FBQ0ksU0FBWixjQUF5QkosSUFBSSxDQUFDSyxRQUE5QjtBQUFBO0FBRFo7QUFaUSxDQUFsQjtBQWlCQSxJQUFNQyxNQUFNLEdBQUcsSUFBSUMsaUNBQUosQ0FBaUI7QUFDNUJDLEVBQUFBLFFBQVEsRUFBRWxCLE1BRGtCO0FBRTVCSyxFQUFBQSxTQUFTLEVBQVRBLFNBRjRCO0FBRzVCYyxFQUFBQSxPQUFPLEVBQUU7QUFDTFosSUFBQUEsRUFBRSxFQUFFTCxNQUFLLENBQUMsQ0FBRDtBQURKO0FBSG1CLENBQWpCLENBQWY7QUFRQWMsTUFBTSxDQUFDSSxlQUFQLENBQXVCO0FBQUV0QixFQUFBQSxHQUFHLEVBQUhBLEdBQUY7QUFBT3VCLEVBQUFBLElBQUksRUFBRTtBQUFiLENBQXZCO0FBRUEsSUFBTUMsSUFBSSxHQUFHLElBQWI7QUFDQXhCLEdBQUcsQ0FBQ3lCLE1BQUosQ0FBVztBQUFDRCxFQUFBQSxJQUFJLEVBQUpBO0FBQUQsQ0FBWCxFQUFtQixZQUFNO0FBQ3JCRSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsaUZBQWlFSCxJQUFqRTtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxNYWdudXNcXERvY3VtZW50c1xcd2Vic3R1ZmZcXEZpbG0gSXRcXHNlcnZlclxcc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XHJcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXHJcbmltcG9ydCB7QXBvbGxvU2VydmVyLCBncWx9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcydcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuYXBwLnVzZShjb3JzKCkpO1xyXG5cclxuY29uc3Qgc2NoZW1hID0gZ3FsYFxyXG4gICAgdHlwZSBRdWVyeSB7XHJcbiAgICAgICAgbWU6IFVzZXJcclxuICAgICAgICB1c2VyKGlkOiBJRCEpOiBVc2VyXHJcbiAgICAgICAgdXNlcnM6IFtVc2VyIV1cclxuICAgIH1cclxuXHJcbiAgICB0eXBlIFVzZXIge1xyXG4gICAgICAgIGlkOiBJRCFcclxuICAgICAgICB1c2VybmFtZTogU3RyaW5nIVxyXG4gICAgfVxyXG5gXHJcblxyXG5sZXQgdXNlcnMgPSB7XHJcbiAgICAxOiB7XHJcbiAgICAgIGlkOiAnMScsXHJcbiAgICAgIHVzZXJuYW1lOiAnUm9iaW4gV2llcnVjaCcsXHJcbiAgICB9LFxyXG4gICAgMjoge1xyXG4gICAgICBpZDogJzInLFxyXG4gICAgICB1c2VybmFtZTogJ0RhdmUgRGF2aWRzJyxcclxuICAgIH0sXHJcbiAgfTtcclxuXHJcbmNvbnN0IHJlc29sdmVycyA9IHtcclxuICAgIFF1ZXJ5OiB7XHJcbiAgICAgICAgbWU6IChwYXJlbnQsIGFyZ3MsIHsgbWUgfSkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gbWU7XHJcbiAgICAgICAgfSxcclxuICAgICAgICB1c2VyOiAocGFyZW50LCB7aWR9KSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiB1c2Vyc1tpZF07XHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIHVzZXJzOiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIE9iamVjdC52YWx1ZXModXNlcnMpO1xyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgVXNlcjoge1xyXG4gICAgICAgIHVzZXJuYW1lOiB1c2VyID0+IGAke3VzZXIuZmlyc3RuYW1lfSAke3VzZXIubGFzdG5hbWV9YCxcclxuICAgIH0sXHJcbn1cclxuXHJcbmNvbnN0IHNlcnZlciA9IG5ldyBBcG9sbG9TZXJ2ZXIoe1xyXG4gICAgdHlwZURlZnM6IHNjaGVtYSxcclxuICAgIHJlc29sdmVycyxcclxuICAgIGNvbnRleHQ6IHtcclxuICAgICAgICBtZTogdXNlcnNbMV0sXHJcbiAgICB9LFxyXG59KVxyXG5cclxuc2VydmVyLmFwcGx5TWlkZGxld2FyZSh7IGFwcCwgcGF0aDogJy9ncmFwaHFsJyB9KTtcclxuXHJcbmNvbnN0IHBvcnQgPSA4MDAwO1xyXG5hcHAubGlzdGVuKHtwb3J0fSwgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coYFNlcnZlciDwn5OmIGlzIHJ1bm5pbmcg8J+PgyBhdCBwb3J0ICBodHRwOi8vbG9jYWxob3N0OiR7cG9ydH0vZ3JhcGhxbGApXHJcbn0pXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "schema",
        "gql",
        "users",
        "id",
        "username",
        "resolvers",
        "Query",
        "me",
        "parent",
        "args",
        "user",
        "Object",
        "values",
        "User",
        "firstname",
        "lastname",
        "server",
        "ApolloServer",
        "typeDefs",
        "context",
        "applyMiddleware",
        "path",
        "port",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AAEA,IAAMC,MAAM,OAAGC,wBAAH,oBAAZ;AAaA,IAAIC,MAAK,GAAG;AACR,KAAG;AACDC,IAAAA,EAAE,EAAE,GADH;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GADK;AAKR,KAAG;AACDD,IAAAA,EAAE,EAAE,GADH;AAEDC,IAAAA,QAAQ,EAAE;AAFT;AALK,CAAZ;AAWA,IAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE;AACHC,IAAAA,EAAE,EAAE,YAACC,MAAD,EAASC,IAAT,QAA0B;AAAA,UAATF,GAAS,QAATA,EAAS;AAC1B,aAAOA,GAAP;AACH,KAHE;AAIHG,IAAAA,IAAI,EAAE,cAACF,MAAD,SAAkB;AAAA,UAARL,EAAQ,SAARA,EAAQ;AACpB,aAAOD,MAAK,CAACC,EAAD,CAAZ;AACD,KANA;AAOHD,IAAAA,KAAK,EAAE,iBAAM;AACb,aAAOS,MAAM,CAACC,MAAP,CAAcV,MAAd,CAAP;AACC;AATE,GADO;AAYdW,EAAAA,IAAI,EAAE;AACFT,IAAAA,QAAQ,EAAE,kBAAAM,IAAI;AAAA,uBAAOA,IAAI,CAACI,SAAZ,cAAyBJ,IAAI,CAACK,QAA9B;AAAA;AADZ;AAZQ,CAAlB;AAiBA,IAAMC,MAAM,GAAG,IAAIC,iCAAJ,CAAiB;AAC5BC,EAAAA,QAAQ,EAAElB,MADkB;AAE5BK,EAAAA,SAAS,EAATA,SAF4B;AAG5Bc,EAAAA,OAAO,EAAE;AACLZ,IAAAA,EAAE,EAAEL,MAAK,CAAC,CAAD;AADJ;AAHmB,CAAjB,CAAf;AAQAc,MAAM,CAACI,eAAP,CAAuB;AAAEtB,EAAAA,GAAG,EAAHA,GAAF;AAAOuB,EAAAA,IAAI,EAAE;AAAb,CAAvB;AAEA,IAAMC,IAAI,GAAG,IAAb;AACAxB,GAAG,CAACyB,MAAJ,CAAW;AAACD,EAAAA,IAAI,EAAJA;AAAD,CAAX,EAAmB,YAAM;AACrBE,EAAAA,OAAO,CAACC,GAAR,iFAAiEH,IAAjE;AACH,CAFD",
      "sourceRoot": "C:\\Users\\Magnus\\Documents\\webstuff\\Film It\\server\\src",
      "sourcesContent": [
        "import cors from 'cors';\r\nimport express from 'express'\r\nimport {ApolloServer, gql} from 'apollo-server-express'\r\n\r\nconst app = express();\r\napp.use(cors());\r\n\r\nconst schema = gql`\r\n    type Query {\r\n        me: User\r\n        user(id: ID!): User\r\n        users: [User!]\r\n    }\r\n\r\n    type User {\r\n        id: ID!\r\n        username: String!\r\n    }\r\n`\r\n\r\nlet users = {\r\n    1: {\r\n      id: '1',\r\n      username: 'Robin Wieruch',\r\n    },\r\n    2: {\r\n      id: '2',\r\n      username: 'Dave Davids',\r\n    },\r\n  };\r\n\r\nconst resolvers = {\r\n    Query: {\r\n        me: (parent, args, { me }) => {\r\n            return me;\r\n        },\r\n        user: (parent, {id}) => {\r\n            return users[id];\r\n          },\r\n        users: () => {\r\n        return Object.values(users);\r\n        },\r\n    },\r\n    User: {\r\n        username: user => `${user.firstname} ${user.lastname}`,\r\n    },\r\n}\r\n\r\nconst server = new ApolloServer({\r\n    typeDefs: schema,\r\n    resolvers,\r\n    context: {\r\n        me: users[1],\r\n    },\r\n})\r\n\r\nserver.applyMiddleware({ app, path: '/graphql' });\r\n\r\nconst port = 8000;\r\napp.listen({port}, () => {\r\n    console.log(`Server 📦 is running 🏃 at port  http://localhost:${port}/graphql`)\r\n})\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570678082263
  }
}